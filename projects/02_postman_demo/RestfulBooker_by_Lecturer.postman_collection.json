{
	"info": {
		"_postman_id": "a8fb5223-b6ed-4cc6-85c2-928e58488e13",
		"name": "RestfulBooker_by_Lecturer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15497739",
		"_collection_link": "https://bt-js-test20241218.postman.co/workspace/bt_25_05_07_api-demo~03bef96e-51df-48fd-8661-daa8447f3f3d/collection/15497739-a8fb5223-b6ed-4cc6-85c2-928e58488e13?action=share&source=collection_link&creator=15497739"
	},
	"item": [
		{
			"name": "demo",
			"item": [
				{
					"name": "DEMO_Authentication_with_valid_data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('token', pm.response.json().token);\r",
									"\r",
									"pm.test(\"Test name\", () => {\r",
									"    console.log(\"Hello\");\r",
									"    console.log(pm.response)\r",
									"    console.log(pm.response.body)\r",
									"    console.log(pm.response.code)\r",
									"    console.log(pm.response.status)\r",
									"    console.log(pm.response.json())\r",
									"    console.log(pm.response.json().token)\r",
									"    // console.log(pm.response.json().fake_property)\r",
									"    // console.log(pm.response.json_fake())\r",
									"});\r",
									"\r",
									"pm.test(\"Response code is 200\", () => {\r",
									"    // Arrange\r",
									"    const expectedStatusCode = 200;\r",
									"\r",
									"    // Act\r",
									"    const actualStatusCode = pm.response.code;\r",
									"\r",
									"    // Assert\r",
									"    pm.expect(actualStatusCode).to.be.equal(expectedStatusCode);\r",
									"    // pm.expect(actualStatusCode).to.be.eq(expectedStatusCode);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"pm.test('Test source properies', ()=>{\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response.token).to.be.an('string')\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEMO_Create_booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"bookingId\", pm.response.json().bookingid);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "username",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Some_name\",\r\n    \"lastname\": \"Haha\",\r\n    \"totalprice\": 869,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEMO_Booking_details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Test source properies', ()=>{\r",
									"    const response = pm.response.json();\r",
									"    const firstName = pm.collectionVariables.get(\"firstName\");\r",
									"    const lastName = pm.collectionVariables.get(\"lastName\");\r",
									"    const totalPrice = pm.collectionVariables.get(\"totalPrice\");\r",
									"\r",
									"    pm.expect(response.firstname).to.be.an('string').and.to.equal('Some_name');\r",
									"    // pm.expect(response.firstname).to.be.an('number').and.to.equal('Some_name');\r",
									"    pm.expect(response.firstname).to.equal('Some_name');\r",
									"    // pm.expect(response.firstname_fake).to.equal('Some_name');\r",
									"    pm.expect(response.firstname).to.be.an('string');\r",
									"    pm.expect(response.totalprice).to.be.an('number');\r",
									"    pm.expect(response.depositpaid).to.be.an('boolean');\r",
									"    pm.expect(response.bookingdates).to.be.an('object');\r",
									"    // pm.expect(response.some_array_name).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEMO_Delete_booking",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{userName}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEMO_Booking_details_after_deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authentication_with_valid_data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Authentication_all_values_are_empty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"\",\r\n  \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Authentication_without_passowrd",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{userName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Authentication_without_username",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Authentication_not_registered_user_name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{fakeUserName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Authentication_with_wrong_password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{userName}}\",\r\n  \"password\": \"{{wrongPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create_booking",
			"item": [
				{
					"name": "Create_booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// console.log('Post-Response');\r",
									"// console.log(pm.request);\r",
									"// console.log(pm.request.body);\r",
									"// console.log(pm.request.body.raw);\r",
									"\r",
									"function saveRequestData() {\r",
									"    const request = JSON.parse(pm.request.body.raw);\r",
									"\r",
									"    // save as variables\r",
									"    pm.collectionVariables.set('firstName', request.firstname);\r",
									"    pm.collectionVariables.set('lastName', request.lastname);\r",
									"    pm.collectionVariables.set('totalprice', request.totalprice);\r",
									"    pm.collectionVariables.set('depositpaid', request.depositpaid);\r",
									"    pm.collectionVariables.set('checkin', request.bookingdates.checkin);\r",
									"    pm.collectionVariables.set('checkout', request.bookingdates.checkout);\r",
									"    pm.collectionVariables.set('additionalneeds', request.additionalneeds);\r",
									"\r",
									"    // save as object\r",
									"    pm.collectionVariables.set('postBookingRequestObj', request);\r",
									"    pm.collectionVariables.set('postBookingRequestStr', pm.request.body.raw);\r",
									"}\r",
									"\r",
									"saveRequestData();\r",
									"\r",
									"// console.log(pm.collectionVariables.get('postBookingRequestObj'));\r",
									"// console.log(pm.collectionVariables.get('postBookingRequestObj').firstname);\r",
									"\r",
									"// console.log(pm.collectionVariables.get('postBookingRequestStr'));\r",
									"// console.log(pm.collectionVariables.get('postBookingRequestStr').firstname);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body booking data [variables]\", function () {\r",
									"    const firstName = pm.collectionVariables.get('firstName');\r",
									"    const lastName = pm.collectionVariables.get('lastName');\r",
									"    const totalPrice = pm.collectionVariables.get('totalprice');\r",
									"    const depositPaid = pm.collectionVariables.get('depositpaid');\r",
									"    const checkIn = pm.collectionVariables.get('checkin');\r",
									"    const checkOut = pm.collectionVariables.get('checkout');\r",
									"    const additionalNeeds = pm.collectionVariables.get('additionalneeds');\r",
									"\r",
									"    const responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(responseBody.bookingid).to.be.an('number').and.to.be.greaterThan(0);\r",
									"\r",
									"    // type is string \r",
									"    pm.expect(responseBody.booking.firstname, \"firstName\").to.be.an('string').and.to.be.equal(firstName);\r",
									"    pm.expect(responseBody.booking.lastname, \"lastName\").to.be.an('string').and.to.be.equal(lastName);\r",
									"\r",
									"    // number -> integer ()\r",
									"    pm.expect(responseBody.booking.totalprice, \"totalPrice\").to.be.an('number').and.to.be.equal(totalPrice);\r",
									"\r",
									"    // boolean -> true / false\r",
									"    pm.expect(responseBody.booking.depositpaid, \"depositpaid\").to.be.an('boolean').and.to.be.equal(depositPaid);\r",
									"\r",
									"    // date as date\r",
									"    pm.expect(new Date(responseBody.booking.bookingdates.checkin), \"Checkin date\")\r",
									"        .to.be.an('date')\r",
									"        .and.to.be.eql(new Date(checkIn));\r",
									"\r",
									"    // date as string\r",
									"    pm.expect(responseBody.booking.bookingdates.checkout, \"Checkout date\")\r",
									"        .to.be.an('string').and.to.be.equal(checkOut);\r",
									"\r",
									"    // string\r",
									"    pm.expect(responseBody.booking.additionalneeds, \"additional needs\")\r",
									"        .to.be.an('string')\r",
									"        .and.to.be.equal(additionalNeeds);\r",
									"});\r",
									"\r",
									"pm.test(\"Check response body booking data [object]\", function () {\r",
									"    const reqeustBody = pm.collectionVariables.get('postBookingRequestObj');\r",
									"    const responseBody = pm.response.json();\r",
									"    const errorMessage = `User ID:${responseBody.bookingid}`;\r",
									"\r",
									"    pm.expect(responseBody.bookingid, 'Assert bookingid | ' + errorMessage).to.be.an('number').and.to.be.greaterThan(0)\r",
									"\r",
									"    pm.expect(responseBody.booking.firstname, \"Assert firstName\").to.be.an('string').and.to.be.equal(reqeustBody.firstname);\r",
									"    pm.expect(responseBody.booking.lastname, \"Assert lastName\").to.be.an('string').and.to.be.equal(reqeustBody.lastname);\r",
									"\r",
									"    // another way to compare objects\r",
									"    // pm.expect(responseBody.booking, 'Assert booking object data').to.be.equal(reqeustBody);\r",
									"    pm.expect(responseBody.booking, 'Assert booking object data').to.be.eql(reqeustBody);\r",
									"});\r",
									"\r",
									"pm.test('Demo object', function () {\r",
									"    const obj01 = {\r",
									"        \"firstname\": \"Gerda\",\r",
									"        \"lastname\": \"Haha\",\r",
									"        \"totalprice\": 870,\r",
									"        \"depositpaid\": false,\r",
									"        \"bookingdates\": {\r",
									"            \"checkin\": \"2016-08-06\",\r",
									"            \"checkout\": \"2017-06-26\"\r",
									"        },\r",
									"        \"additionalneeds\": \"Breakfast\"\r",
									"    }\r",
									"\r",
									"    const obj02 = {\r",
									"        \"firstname\": \"Gerda\",\r",
									"        \"lastname\": \"Haha\",\r",
									"        \"totalprice\": 870,\r",
									"        \"depositpaid\": false,\r",
									"        \"bookingdates\": {\r",
									"            \"checkin\": \"2016-08-06\",\r",
									"            \"checkout\": \"2017-06-26\"\r",
									"        },\r",
									"        \"additionalneeds\": \"Breakfast\"\r",
									"    }\r",
									"\r",
									"    // pm.expect(obj01 == obj02, \"frist\").to.be.true;\r",
									"    // pm.expect(obj01 === obj02, \"second\").to.be.true;\r",
									"    pm.expect(obj01, 'Assert booking object data').to.be.eql(obj02);\r",
									"    // pm.expect(obj01, 'Assert booking object data').to.be.equal(obj02);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"Haha\",\r\n    \"totalprice\": 870,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking_details_for_Create_Booking",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_booking_with_mandatory_fields_only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Some_name\",\r\n    \"lastname\": \"Haha\",\r\n    \"totalprice\": 869,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking_details_for_Create_Booking_with_mandatory_fields",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Create_booking_without_firstname",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lastname\": \"Haha\",\r\n    \"totalprice\": 869,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking_list",
			"item": [
				{
					"name": "Booking_id_list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking_details",
			"item": [
				{
					"name": "Create_booking_for_booking_details",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Lietuvis\",\r\n    \"lastname\": \"Haha\",\r\n    \"totalprice\": 869,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking_details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "getBookingByFiltering",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/1?firstname=Susan&last=Wilson",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"1"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Susan"
						},
						{
							"key": "last",
							"value": "Wilson"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updateBooking",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Nesakysiu\",\r\n    \"lastname\": \"Pavardenis\",\r\n    \"totalprice\": 869,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2016-08-06\",\r\n        \"checkout\": \"2017-06-26\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteBooking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://restful-booker.herokuapp.com"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "bookingId",
			"value": ""
		},
		{
			"key": "userName",
			"value": "",
			"type": "default"
		},
		{
			"key": "password",
			"value": "",
			"type": "default"
		},
		{
			"key": "fakeUserName",
			"value": "",
			"type": "default"
		},
		{
			"key": "wrongPassword",
			"value": "",
			"type": "default"
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "totalprice",
			"value": ""
		},
		{
			"key": "depositpaid",
			"value": ""
		},
		{
			"key": "checkin",
			"value": ""
		},
		{
			"key": "checkout",
			"value": ""
		},
		{
			"key": "postBookingRequestObj",
			"value": ""
		},
		{
			"key": "postBookingRequestStr",
			"value": ""
		},
		{
			"key": "additionalneeds",
			"value": ""
		}
	]
}